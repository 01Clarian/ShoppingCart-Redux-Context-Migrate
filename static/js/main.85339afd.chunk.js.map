{"version":3,"sources":["reducers/cart.js","constants/ActionTypes.js","reducers/products.js","reducers/index.js","api/shop.js","components/Product.js","components/ProductItem.js","components/ProductsList.js","provider/products.provider.js","containers/ProductsContainer.js","actions/index.js","components/Cart.js","containers/CartContainer.js","containers/App.js","index.js"],"names":["initialState","addedIds","quantityById","state","arguments","length","undefined","action","type","indexOf","productId","concat","Object","toConsumableArray","objectSpread","defineProperty","cart","combineReducers","byId","products","reduce","obj","product","id","inventory","visibleIds","map","getProduct","getAddedIds","fromCart","getQuantity","fromProducts","getTotal","total","price","toFixed","getCartProducts","quantity","shop","getProducts","_getProducts","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","Promise","cb","timeout","setTimeout","_products","stop","apply","this","buyProducts","payload","Product","_ref","title","react_default","createElement","ProductItem","onAddToCartClicked","style","marginBottom","components_Product","onClick","disabled","ProductsList","children","ProductsContext","createContext","test","ProductsProvider","_useState","useState","slicedToArray","_useState3","_useState4","setProducts","useEffect","response","sent","Provider","value","connect","addToCart","dispatch","getState","addToCartUnsafe","_useContext","useContext","console","log","components_ProductsList","components_ProductItem","key","Cart","onCheckoutClicked","hasProducts","nodes","checkout","components_Cart","App","containers_ProductsContainer","containers_CartContainer","middleware","thunk","store","createStore","reducer","applyMiddleware","receiveProducts","render","products_provider","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.85339afd.chunk.js","sourcesContent":["import {\n  ADD_TO_CART,\n  CHECKOUT_REQUEST,\n  CHECKOUT_FAILURE\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  addedIds: [],\n  quantityById: {}\n}\n\nconst addedIds = (state = initialState.addedIds, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      if (state.indexOf(action.productId) !== -1) {\n        return state\n      }\n      return [ ...state, action.productId ]\n    default:\n      return state\n  }\n}\n\nconst quantityById = (state = initialState.quantityById, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      const { productId } = action\n      return { ...state,\n        [productId]: (state[productId] || 0) + 1\n      }\n    default:\n      return state\n  }\n}\n\nexport const getQuantity = (state, productId) =>\n  state.quantityById[productId] || 0\n\nexport const getAddedIds = state => state.addedIds\n\nconst cart = (state = initialState, action) => {\n  switch (action.type) {\n    case CHECKOUT_REQUEST:\n      return initialState\n    case CHECKOUT_FAILURE:\n      return action.cart\n    default:\n      return {\n        addedIds: addedIds(state.addedIds, action),\n        quantityById: quantityById(state.quantityById, action)\n      }\n  }\n}\n\nexport default cart\n","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS'\n","import { combineReducers } from 'redux'\nimport { RECEIVE_PRODUCTS, ADD_TO_CART } from '../constants/ActionTypes'\n\nconst products = (state, action) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        ...state,\n        inventory: state.inventory - 1\n      }\n    default:\n      return state\n  }\n}\n\nconst byId = (state = {}, action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return {\n        ...state,\n        ...action.products.reduce((obj, product) => {\n          obj[product.id] = product\n          return obj\n        }, {})\n      }\n    default:\n      const { productId } = action\n      if (productId) {\n        return {\n          ...state,\n          [productId]: products(state[productId], action)\n        }\n      }\n      return state\n  }\n}\n\nconst visibleIds = (state = [], action) => {\n  switch (action.type) {\n    case RECEIVE_PRODUCTS:\n      return action.products.map(product => product.id)\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  byId,\n  visibleIds\n})\n\nexport const getProduct = (state, id) =>\n  state.byId[id]\n\nexport const getVisibleProducts = state =>\n  state.visibleIds.map(id => getProduct(state, id))\n","import { combineReducers } from 'redux'\nimport cart, * as fromCart from './cart'\nimport products, * as fromProducts from './products'\n\nexport default combineReducers({\n  cart,\n  products\n})\n\nconst getAddedIds = state => fromCart.getAddedIds(state.cart)\nconst getQuantity = (state, id) => fromCart.getQuantity(state.cart, id)\nconst getProduct = (state, id) => fromProducts.getProduct(state.products, id)\n\nexport const getTotal = state =>\n  getAddedIds(state)\n    .reduce((total, id) =>\n      total + getProduct(state, id).price * getQuantity(state, id),\n      0\n    )\n    .toFixed(2)\n\nexport const getCartProducts = state =>\n  getAddedIds(state).map(id => ({\n    ...getProduct(state, id),\n    quantity: getQuantity(state, id)\n  }))\n","/**\n * Mocking client-server processing\n */\nimport _products from './products.json'\n\nconst TIMEOUT = 100\n\nexport default {\n  getProducts: async ()=> new Promise((cb, timeout) => setTimeout(() => cb(_products), timeout || TIMEOUT)),\n  buyProducts: (payload, cb, timeout) => setTimeout(() => cb(), timeout || TIMEOUT)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Product = ({ price, quantity, title }) => (\n  <div>\n    {title} - &#36;{price}{quantity ? ` x ${quantity}` : null}\n  </div>\n)\n\nProduct.propTypes = {\n  price: PropTypes.number,\n  quantity: PropTypes.number,\n  title: PropTypes.string\n}\n\nexport default Product\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\n\nconst ProductItem = ({ product, onAddToCartClicked }) => (\n  <div style={{ marginBottom: 20 }}>\n    <Product\n      title={product.title}\n      price={product.price}\n      quantity={product.inventory} />\n    <button\n      onClick={onAddToCartClicked}\n      disabled={product.inventory > 0 ? '' : 'disabled'}>\n      {product.inventory > 0 ? 'Add to cart' : 'Sold Out'}\n    </button>\n  </div>\n)\n\nProductItem.propTypes = {\n  product: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  }).isRequired,\n  onAddToCartClicked: PropTypes.func.isRequired\n}\n\nexport default ProductItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProductsList = ({ title, children }) => (\n  <div>\n    <h3>{title}</h3>\n    <div>{children}</div>\n  </div>\n)\n\nProductsList.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired\n}\n\nexport default ProductsList\n","import React,{createContext, useState, useEffect} from 'react'\nimport shop from '../api/shop'\n\nexport const ProductsContext = createContext({\n    test: '',\n    products: []\n})\n\nconst ProductsProvider = ({children}) => {\n    const [test] = useState('the products provider has been successfully connected :)')\n    const [products, setProducts] = useState([])\n    useEffect(async ()=> {\n        const response = await shop.getProducts(products => products)\n        setProducts(response)\n},[])\n    return (\n        <ProductsContext.Provider value={{test, products}}>\n            {children}\n        </ProductsContext.Provider>\n    )\n}\n\nexport default ProductsProvider","import React,{useContext} from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { addToCart } from '../actions'\nimport { getVisibleProducts } from '../reducers/products'\nimport ProductItem from '../components/ProductItem'\nimport ProductsList from '../components/ProductsList'\nimport {ProductsContext} from '../provider/products.provider'\n\nconst ProductsContainer = ({addToCart }) => {\n  const {test, products} = useContext(ProductsContext)\n  console.log(test)\nreturn (\n  <ProductsList title=\"Products\">\n    {products.map(product =>\n      <ProductItem\n        key={product.id}\n        product={product}\n        onAddToCartClicked={() => addToCart(product.id)} />\n    )}\n  </ProductsList>\n)\n    }\nProductsContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired\n  })).isRequired,\n  addToCart: PropTypes.func.isRequired\n}\n\nexport default connect(\n  null,\n  { addToCart }\n)(ProductsContainer)\n","import shop from '../api/shop'\nimport * as types from '../constants/ActionTypes'\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n})\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products))\n  })\n}\n\nconst addToCartUnsafe = productId => ({\n  type: types.ADD_TO_CART,\n  productId\n})\n\nexport const addToCart = productId => (dispatch, getState) => {\n  if (getState().products.byId[productId].inventory > 0) {\n    dispatch(addToCartUnsafe(productId))\n  }\n}\n\nexport const checkout = products => (dispatch, getState) => {\n  const { cart } = getState()\n\n  dispatch({\n    type: types.CHECKOUT_REQUEST\n  })\n  shop.buyProducts(products, () => {\n    dispatch({\n      type: types.CHECKOUT_SUCCESS,\n      cart\n    })\n    // Replace the line above with line below to rollback on failure:\n    // dispatch({ type: types.CHECKOUT_FAILURE, cart })\n  })\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Product from './Product'\n\nconst Cart  = ({ products, total, onCheckoutClicked }) => {\n  const hasProducts = products.length > 0\n  const nodes = hasProducts ? (\n    products.map(product =>\n      <Product\n        title={product.title}\n        price={product.price}\n        quantity={product.quantity}\n        key={product.id}\n      />\n    )\n  ) : (\n    <em>Please add some products to cart.</em>\n  )\n\n  return (\n    <div>\n      <h3>Your Cart</h3>\n      <div>{nodes}</div>\n      <p>Total: &#36;{total}</p>\n      <button onClick={onCheckoutClicked}\n        disabled={hasProducts ? '' : 'disabled'}>\n        Checkout\n      </button>\n    </div>\n  )\n}\n\nCart.propTypes = {\n  products: PropTypes.array,\n  total: PropTypes.string,\n  onCheckoutClicked: PropTypes.func\n}\n\nexport default Cart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { checkout } from '../actions'\nimport { getTotal, getCartProducts } from '../reducers'\nimport Cart from '../components/Cart'\n\nconst CartContainer = ({ products, total, checkout }) => (\n  <Cart\n    products={products}\n    total={total}\n    onCheckoutClicked={() => checkout(products)} />\n)\n\nCartContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired\n  })).isRequired,\n  total: PropTypes.string,\n  checkout: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  products: getCartProducts(state),\n  total: getTotal(state)\n})\n\nexport default connect(\n  mapStateToProps,\n  { checkout }\n)(CartContainer)\n","import React from 'react'\nimport ProductsContainer from './ProductsContainer'\nimport CartContainer from './CartContainer'\n\nconst App = () => (\n  <div>\n    <h2>Shopping Cart Example</h2>\n    <hr/>\n    <ProductsContainer />\n    <hr/>\n    <CartContainer />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\nimport { getAllProducts } from './actions'\nimport App from './containers/App'\nimport ProductsProvider from './provider/products.provider'\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\n\nstore.dispatch(getAllProducts())\n\nrender(\n  <ProductsProvider>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </ProductsProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}